name: Continuous Vulnerability Scanning

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  push:
    branches:
      - main

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-1'

    - name: Run AWS Inspector Assessment
      id: start-inspector
      run: |
        INSPECTOR_TEMPLATE_ARN="arn:aws:inspector:us-east-1:958102127552:target/0-67X2iQZr/template/0-5piBCCJ1"
        ASSESSMENT_RUN_ARN=$(aws inspector start-assessment-run --assessment-template-arn "$INSPECTOR_TEMPLATE_ARN" --query 'assessmentRunArn' --output text)
        echo "ASSESSMENT_RUN_ARN=$ASSESSMENT_RUN_ARN" >> $GITHUB_ENV

    - name: Wait for AWS Inspector Assessment to Complete
      run: |
        while true; do
          STATUS=$(aws inspector describe-assessment-runs --assessment-run-arns ${{ env.ASSESSMENT_RUN_ARN }} --query 'assessmentRuns[0].state' --output text)
          if [[ "$STATUS" == "COMPLETED" ]]; then
            break
          elif [[ "$STATUS" == "CANCELED" || "$STATUS" == "ERROR" ]]; then
            echo "Assessment run failed with status: $STATUS"
            exit 1
          else
            echo "Waiting for assessment run to complete..."
            sleep 60
          fi
        done

    - name: Retrieve AWS Inspector Findings
      id: get-findings
      run: |
        aws inspector list-findings --assessment-run-arns ${{ env.ASSESSMENT_RUN_ARN }} --query 'findingArns' --output text > findings.txt
        if [ -s findings.txt ]; then
          echo "has_findings=true" >> $GITHUB_ENV
        else
          echo "has_findings=false" >> $GITHUB_ENV
        fi

    - name: Get Findings Details and Create Jira Tickets
      if: env.has_findings == 'true'
      env:
        JIRA_USER: ${{ secrets.JIRA_USER }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
        JIRA_URL: ${{ secrets.JIRA_URL }}
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        curl -D- \
            -u $JIRA_USER:$JIRA_API_TOKEN \
            -X POST \
            --data '{
            "fields": {
                "project": {
                "key": "'$JIRA_PROJECT_KEY'"
                },
                "summary": "New Commit 2 to GitHub Repository",
                "description": "'"${COMMIT_MESSAGE}"'",
                "issuetype": {
                "name": "Task"
                }
            }
            }' \
            -H "Content-Type: application/json" \
            $JIRA_URL/rest/api/2/issue/